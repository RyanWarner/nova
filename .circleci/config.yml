# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
build_defaults: &build_defaults
  docker:
    - image: circleci/node:10.15.3
  working_directory: ~/repo

deploy_defaults: &deploy_defaults
  docker:
    - image: circleci/python:3.7.2-stretch
  working_directory: ~/repo

version: 2.1
orbs:
  cypress: cypress-io/cypress@1.11.0
jobs:
  build:
    <<: *build_defaults
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install
      - run:
          name: Build
          command: |
              if [ $CIRCLE_BRANCH = 'production' ]; then
                npm run build:production
              fi
              if [ $CIRCLE_BRANCH = 'staging' ]; then
                npm run build:staging
              fi
              if [ $CIRCLE_BRANCH = 'develop' ]; then
                npm run build:develop
              fi
              if [ $CIRCLE_BRANCH = 'dev' ]; then
                npm run build:develop
              fi

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: /home/circleci/repo
          paths:
            - .

  deploy-dev:
    <<: *deploy_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Configure AWS
          command: aws configure set region $AWS_S3_REGION
      - run:
          name: Upload dist folder to S3
          command: aws s3 sync --acl public-read --delete ./dist s3://$S3_BUCKET_DEV --metadata-directive REPLACE --expires 2100-01-01T00:00:00Z --cache-control max-age=31536000
      - run:
          name: Update index.html cache headers
          command: aws s3 cp s3://$S3_BUCKET_DEV/index.html s3://$S3_BUCKET_DEV/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read

  deploy-staging:
    <<: *deploy_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Configure AWS
          command: aws configure set region $AWS_S3_REGION
      - run:
          name: Upload dist folder to S3
          command: aws s3 sync --acl public-read --delete ./dist s3://$S3_BUCKET_STAGING --metadata-directive REPLACE --expires 2100-01-01T00:00:00Z --cache-control max-age=31536000
      - run:
          name: Update index.html cache headers
          command: aws s3 cp s3://$S3_BUCKET_STAGING/index.html s3://$S3_BUCKET_STAGING/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read

  deploy-production:
    <<: *deploy_defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Configure AWS
          command: aws configure set region $AWS_S3_REGION
      - run:
          name: Upload dist folder to S3
          command: aws s3 sync --acl public-read --delete ./dist s3://$S3_BUCKET_PRODUCTION --metadata-directive REPLACE --expires 2100-01-01T00:00:00Z --cache-control max-age=31536000
      - run:
          name: Update index.html cache headers
          command: aws s3 cp s3://$S3_BUCKET_PRODUCTION/index.html s3://$S3_BUCKET_PRODUCTION/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - staging
                - production

      - cypress/run:
          start: "npm run start"
          requires:
            - build
          record: true

      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: production
